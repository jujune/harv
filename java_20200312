
​

package 생성자;

​

import java.awt.FlowLayout;

​

import javax.swing.JButton;

import javax.swing.JFrame;

​

public class 생성자확인 {

​

    public static void main(String[] args) {

        JFrame f = new JFrame("나의 윈도우");

        f.setSize(500,500);

        

        f.setLayout(new FlowLayout());

        

        JButton b = new JButton("나를 눌러요");

        f.add(b);

        

        f.setVisible(true);

    }

​

}

​

​

​

​

​

​

package 생성자;

​

public class Tv {

    String color; //null

    int size; //0

​

    //default(기본 생성자)

    //파라메터를 가진 생성자가 없는 경우는 자동으로 만들어줌.

    //파라메터를 가진 생성자가 있는 경우는 자동으로 만들어주지 않음.

    

    

    

    public Tv() {

    }

    //source-> Generate Constructor using fields로 생성자 만들 수 있음

    

​

    //생성자 : 객체 생성시 자동 호출되는 메소드

    

    //파라메터 생성자

    //멤버변수 초기화  // 첫값(빨강,50) 넣어주는 것을 초기화라고 부름

    public Tv(String color, int size) {//생성자는 무조건 void다. 반환값이 없음. 

        //메소드에 입력값을 넣어주고 싶을때 생성자 사용 //생성자를 만들면 무조건 입력값을 요구하게 됨.

        System.out.println("클래스 이름과 동일한 내가 호출됨");

        this.color = color; //컬러를 입력값 컬러로

        //color = color 할 경우 메소드와 가까운 지역변수를 인식하기 때문에, 전역변수인 color를 가져오려면 this사용

        this.size = size; //사이즈를 입력값 size로

    }

    

    //Tv로 생성된 객체의 멤버변수 값 프린트 

    @Override //생성된 객체를  sysout하면 

    public String toString() { //일일이 출력해도 되지만 귀찮으니까. DTO에도 만들어두면 편하다.

        return "Tv [color=" + color + ", size=" + size + "]";

    

    

    }

​

    

    

}

​

​

​

​

​

​

​

package 생성자;

​

import javax.swing.JOptionPane;

​

public class TvUse {

​

    public static void main(String[] args) {

        Tv myTv = new Tv("빨강", 50); //첫 값 안 넣으면 null,0으로 초기화. 값 넣으면 빨강,50으로 초기화.

        

        Tv yourTv = new Tv();

        //Tv()는 default이지만, 파라메터 생성자가 미리 있는 경우는 명시적으로 만들어주어야 한다.

        

        String color = JOptionPane.showInputDialog("TV색 입력");

        String size = JOptionPane.showInputDialog("TV사이즈 입력");

        int size2 = Integer.parseInt(size);

        yourTv.color = color;

        yourTv.size = size2;

        System.out.println(yourTv);

        

        

        //객체 생성 시 객체에 맞는 인스턴스(실제값)를 넣기 위해 힙 영역에 객체별로 따로 복사되는 멤버변수 

        //인스턴스 변수 (<-> static변수 (정적변수)

        myTv.color = "빨강";

        myTv.size = 50;

        

        System.out.println(myTv); //원래는 주소값 나오지만 toString을 해서 투스트링 나옴.

    }

​

}

​

​

​

​

​

​

package 정적;

​

public class Day {

    String doing;

    int time;

    String location;

    static int count; //일 누적

    static int sum; //시간 누적

    

    public Day(String doing, int time, String location) {

        this.doing = doing;

        this.time = time;

        this.location = location;

        count++;

        sum = sum + time;

    }

​

    @Override

    public String toString() {

        return "Day [doing=" + doing + ", time=" + time + ", location=" + location + "]";

    }

    

    

}

​

​

​

​

​

​

package 정적;

​

class DayUse {

​

    public static void main(String[] args) {

        Day day1 = new Day("자바공부", 10, "강남");

        Day day2 = new Day("여행", 15, "강원도");

        Day day3 = new Day("운동", 11, "피트니스");

        

        System.out.println(day1);

        System.out.println(day2);

        System.out.println(day3);

        int count = Day.count;

        System.out.println(count + "일");

        

        int sum = Day.sum;

        System.out.println("전체 하는 일의 시간: " + sum + "시간");

        System.out.println("평균 일하는 시간: " + sum/count + "시간");

    }

​

}

​

​

​

​

​

package 정적;

​

import javax.swing.JOptionPane;

​

public class LoginCheck {

​

    static String logId;

    

    public static void main(String[] args) {

        String saveId = "root";

        String savePw = "1234";

        String id = JOptionPane.showInputDialog("아이디 입력");

        String pw = JOptionPane.showInputDialog("패스워드 입력");

        

        if (saveId.equals(id) && savePw.equals(pw)) {

            JOptionPane.showMessageDialog(null, "로그인O");

            logId = id; //원하는 곳에서 id를 사용할 수 있도록 static

            News n = new News();

            n.news();

            

            Mail m = new Mail();

            m.mail();

        } else {

            JOptionPane.showMessageDialog(null, "로그인X");

        }

        

    }

​

}

​

​

​

​

​

​

package 정적;

​

import javax.swing.JOptionPane;

​

public class Mail {

​

    public void mail() {

        JOptionPane.showMessageDialog(null,"메일" + LoginCheck.logId + "님 환영합니다");

        

        

        

    }

​

}

​

​

​

​

​

​

package 정적;import java.io.ObjectInputStream.GetField;

​

public class Mask {

    //인스턴스 변수 // ; 객체가 생성되어야만 쓸 수 있음

    String color;

    int price;

    int count;

    

    static int total; //마스크 객체 생성 개수 // ; 객체 생성하지 않아도 사용 가능

    static final String COMPANY = "웰킵스"; //절대 못바꾸는 변수로 지정. 두둥 

    //상수 표현은 일반적으로 대문자. 꼭 그래야 하는건 아님

    

    public static int getTotal() {

        return total;

        //static메소드를 사용하는 경우, 멤버변수는 static 변수여야 한다.

        //객체 생성과 상관없이 접근하는 메소드와 멤버변수를 사용해야함.

    }

    

//  public static int getTotal() { // <--- 불가능!!!!!

//      return count;

//  //인스턴스 변수는 객체 생성 후 주소로만 접근 가능

//  }

​

    

    public Mask() {

        

    }

    

    public Mask(String color, int price, int count) {

        this.color = color;

        this.price = price;

        this.count = count;

        total++;

    }

​

    //전체 멤버변수 값 출력

    @Override

    public String toString() {

        return "Mask [color=" + color + ", price=" + price + ", count=" + count + "]";

    }

    

    

    

}

​

​

​

​

​

​

​

​

package 정적;

​

public class MaskUse {

​

    public static void main(String[] args) {

        Mask m1 = new Mask("흰색", 3000, 5);

        System.out.println(Mask.total + "개"); //클래스의 static을 불러올땐 객체 이름 말고 바로 클래스 이름으로.

        Mask m2 = new Mask("검정색", 2500, 2);

        System.out.println(Mask.total + "개");

        

        System.out.println(m1);

        System.out.println(m2);

        

    }

​

}

​

​

​

​

​

​

package 정적;

​

import javax.swing.JOptionPane;

​

public class News {

​

    public void news() {

        JOptionPane.showMessageDialog(null,"뉴스: " + LoginCheck.logId + "님 환영합니다");

        

        

        

    }

​

}

​

​

​

​

​

package 정적;

​

public class WoekerUse {

​

    public static void main(String[] args) {

        Worker w1 = new Worker("임아무개", '남', 24);

        Worker w2 = new Worker("김아무개", '여', 23);

        Worker w3 = new Worker("박아무개", '남', 25);

        

        System.out.println("전체 직원 수는 " + Worker.count_worker);

        System.out.println("전체 평균 나이는 " + Worker.count_age/Worker.count_worker);

        System.out.println("첫번째 직원의 이름은 " + w1.name);

    }

​

}

​

​

​

​

​

package 정적;

​

public class WoekerUse {

​

    public static void main(String[] args) {

        Worker w1 = new Worker("임아무개", '남', 24);

        Worker w2 = new Worker("김아무개", '여', 23);

        Worker w3 = new Worker("박아무개", '남', 25);

        

        System.out.println("전체 직원 수는 " + Worker.count_worker);

        System.out.println("전체 평균 나이는 " + Worker.count_age/Worker.count_worker);

        System.out.println("첫번째 직원의 이름은 " + w1.name);

    }

​

}

​

​

​
